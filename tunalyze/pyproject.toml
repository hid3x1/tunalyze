[project]
name = "tunalyze"
version = "0.1.6"
description = "About An innovative music analysis tool leveraging Spotify API to provide in-depth insights into track attributes for genre trends, era evolution, and mood-based music exploration. Ideal for music enthusiasts, producers, and marketers seeking data-driven inspiration and strategic decision-making."
authors = [{ name = "hid3xxx", email = "" }]
dependencies = ["python-dotenv>=1.0.0", "spotipy>=2.23.0"]
readme = "README.md"
requires-python = ">= 3.8"

[project.scripts]
hello = "tunalyze:hello"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = ["ruff>=0.1.11", "pytest>=7.4.4", "pytest-mock>=3.12.0"]

[tool.rye.scripts]
format = "ruff format src tests"
lint = "ruff check src tests --fix"
all = { chain = ["format", "lint"] }
test = "pytest --collect-only"
update-version = "../scripts/update_version.sh"

[tool.ruff]
target-version = "py312"
select = ["ALL"]
exclude = [".venv", "venv", "__pycache__", ".git"]
ignore = ["COM812", "ISC001", "ANN101", "E501"]
line-length = 88
indent-width = 4

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104", "F401"]
"tests/**/*.py" = [
  "D100",
  "F401",
  "S101",
  "S105",
  "SLF001",
  "ANN001",
  "ANN201",
  "N802",
  "ARG",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/tunalyze"]
